// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RockstarResume.DAL;

namespace RockstarResume.DAL.Migrations
{
    [DbContext(typeof(RockstarResumeContext))]
    [Migration("20190902104559_DemoMigration")]
    partial class DemoMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("RockstarResume.Model.AccountManager", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("PhoneNumber");

                    b.HasKey("Id");

                    b.ToTable("AccountManagers");
                });

            modelBuilder.Entity("RockstarResume.Model.Resume", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AccountManagerId");

                    b.Property<int>("Language");

                    b.Property<int?>("RockstarId");

                    b.Property<int?>("RockstarPropertyId");

                    b.HasKey("Id");

                    b.HasIndex("AccountManagerId");

                    b.HasIndex("RockstarId");

                    b.HasIndex("RockstarPropertyId");

                    b.ToTable("Resumes");
                });

            modelBuilder.Entity("RockstarResume.Model.Rockstar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Birthday");

                    b.Property<bool>("DriversLicense");

                    b.Property<string>("EmailAddress");

                    b.Property<string>("FirstName");

                    b.Property<string>("LastName");

                    b.Property<string>("Nationality");

                    b.Property<string>("PhoneNumber");

                    b.Property<string>("PictureUrl");

                    b.Property<int>("Region");

                    b.HasKey("Id");

                    b.ToTable("Rockstars");
                });

            modelBuilder.Entity("RockstarResume.Model.RockstarProperties.RockstarProperty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("RockstarId");

                    b.HasKey("Id");

                    b.HasIndex("RockstarId");

                    b.ToTable("RockstarProperty");
                });

            modelBuilder.Entity("RockstarResume.Model.Resume", b =>
                {
                    b.HasOne("RockstarResume.Model.AccountManager", "AccountManager")
                        .WithMany()
                        .HasForeignKey("AccountManagerId");

                    b.HasOne("RockstarResume.Model.Rockstar", "Rockstar")
                        .WithMany()
                        .HasForeignKey("RockstarId");

                    b.HasOne("RockstarResume.Model.RockstarProperties.RockstarProperty")
                        .WithMany("Resumes")
                        .HasForeignKey("RockstarPropertyId");
                });

            modelBuilder.Entity("RockstarResume.Model.RockstarProperties.RockstarProperty", b =>
                {
                    b.HasOne("RockstarResume.Model.Rockstar", "Rockstar")
                        .WithMany("Properties")
                        .HasForeignKey("RockstarId");
                });
#pragma warning restore 612, 618
        }
    }
}
